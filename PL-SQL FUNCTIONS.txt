FUNCTIONS IN PLSQL

CREATE OR REPLACE FUNCTION MYFUNC(A NUMBER,B NUMBER)
RETURN NUMBER
IS C NUMBER;
BEGIN
            C :=A*B;
           RETURN C;

END;

//CALLING A FUNCTION
DECLARE 
M NUMBER;
BEGIN
M:=MYFUNC(10,20);
DBMS_OUTPUT.PUT_LINE(M);
END;


//IN ABOVE WE USE 3 VARIABLES.BUT CAN DO ALSO IN 2 VARIABLES

CREATE OR REPLACE FUNCTION MYFUNC(A IN OUT NUMBER,B NUMBER)
RETURN NUMBER
IS 
BEGIN
            A :=A*B;
           RETURN A;

END;

//CALLING THE FUNCTION WITH 2 VARIABLES

DECLARE
M NUMBER := :M;
Y NUMBER := :Y;
BEGIN
M :=MYFUNC(M,Y);
DBMS_OUTPUT.PUT_LINE(M);
END;



//PROCEDURE WITH IN OUT 

CREATE OR REPLACE PROCEDURE PROC_CAL(A IN OUT NUMBER,B NUMBER)
IS 
BEGIN

     A :=A*B;
END;

----CALLING IT

DECLARE
M NUMBER := :M;
V NUMBER := :V;
BEGIN

PROC_CAL(M,V);
DBMS_OUTPUT.PUT_LINE(M);
END;



//CREATE A EMI_CAL WHICH TAKE WITH INTEREST OF 14% .CALCULATE THE MONTHLY EMI.INPUT = LOAN AMT IN NUMBER AND TOTAL NO OF MONTHS IN NUMBER;


CREATE OR  REPLACE FUNCTION EMI_CAL(LOAN_AMT IN  NUMBER,TOTAL_NO_OF_MONTH IN  NUMBER)
RETURN NUMBER
IS 
MONTHLY_EMI NUMBER;
MONTHLY_RATE NUMBER :=14/(12*100);
BEGIN

MONTHLY_EMI := (LOAN_AMT * POWER(1+MONTHLY_RATE,TOTAL_NO_OF_MONTH))/(POWER (1+MONTHLY_RATE,TOTAL_NO_OF_MONTH)-1);
RETURN MONTHLY_EMI;
END;

//CALLNG FN

SELECT EMI_CAL(3000,70) AS MONTHLY_EMI FROM DUAL;


//5404158338


