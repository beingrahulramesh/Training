//CODE FOR CREATING BACK TABLE;

create TABLE EMP_BACKUP AS SELECT * FROM EMP;

SELECT * FROM  EMP_BACKUP;

//CREATE TRIGGER

CREATE OR REPLACE TRIGGER TGR_DEL_EMP BEFORE DELETE ON EMP
FOR EACH ROW

BEGIN

INSERT INTO EMP_BACKUP VALUES
(:OLD.EMPNO,:OLD.ENAME,:OLD.JOB,:OLD.MGR,:OLD.HIREDATE,:OLD.SAL,:OLD.COMM,:OLD.DEPTNO);
DBMS_OUTPUT.PUT_PUTLINE('TOOK BACK UP');
END;

DELETE  FROM EMP_BACKUP;
SELECT * FROM EMP;

DELETE FROM EMP WHERE EMPNO=7839;

INSERT INTO EMP 
VALUES (9876,'RAHUL','DEVELOPER',8900,'10-10-20',5000,NULL,3);

//SIMPLE TRIGGER FOR INSERT ON EMP

CREATE OR REPLACE TRIGGER TGR_EMP_INSERT AFTER INSERT ON EMP FOR EACH ROW 
BEGIN
    DBMS_OUTPUT.PUT_LINE('A NEW RECORD INSERTED');
    END;

exception



//SIMPLE TRIGGER FOR UPDATE ON EMP
CREATE OR REPLACE TRIGGER TGR_EMP_UPDATE AFTER UPDATE ON EMP FOR EACH ROW
BEGIN
    DBMS_OUTPUT.PUT_LINE('MY DATA IS UPDATED');
    END;


UPDATE EMP SET COMM=1 WHERE COMM IS NULL;

SELECT * FROM EMP;
-----------------------------------------------------------
ALTER TABLE_NAME DISABLE ALL TRIGGER;

ALTER TABLE_NAME ENABLE ALL TRIGGER;

ALTER TRIGGER TRIGGER_NAME ENABLE;---------SINGLE TRIGGER;

ALTER TRIGGER TRIGGER_NAME DISABLE;----------SINGLE TRIGGER;
---------------------------------------------------------------


//cursor with exception

FETCH CUR_EMPDETAILS INTO VNAME,VSAL,VJOB;
IF CUR_EMPDETAILS%NOTFOUND THEN
RAISE NO_DATA_FOUND
ELSE 
LOOP
    FETCH CUR_EMPDETAILS INTO VNAME,VSAL,VJOB;
    EXIT WHEN CUR_EMPDETAILS%NOTFOUND;
    DBMS_OUTPUT.PUT_LINE(VNAME || 'JOB IS '||VJOB||''||VSAL);
    END LOOP;
    END IF;
    CLOSE CUR_EMPDETAILS;
    exception
    WHEN NO_DATA_FOUND THEN 
    DBMS_OUTPUT.PUT_LINE('NO EMPLOYEES IN DEPTNO GIVEN');
    END;

//
 DECLARE
    v_name VARCHAR2(50);
    BEGIN
        SELECT E.ENAME INTO V_NAME FROM EMP E;
        DBMS_OUTPUT.PUT_LINE('THE EMPLOYEE NAME IS '|| V_NAME);
        exception
        WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('NO DATA');
        WHEN TOO_MANY_ROWS THEN
        DBMS_OUTPUT.PUT_LINE('MANY ROWS');
        END;




